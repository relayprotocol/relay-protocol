name: Continuous Delivery

on:
  push:
    branches: [main, development]
  workflow_dispatch:

env:
  NODE_VERSION: '18.x'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: packages
        with:
          base: ${{ github.ref }}
          filters: |
            changed:
              - 'Dockerfile'
              - 'package.json'
              - 'yarn.lock'
              - 'backend/package.json'
              - 'claimer/package.json'

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: Dockerfile
          tags: |
            ghcr.io/reservoirprotocol/relay-backend:latest
            ghcr.io/reservoirprotocol/relay-backend:${{ github.sha }}
            ghcr.io/reservoirprotocol/relay-backend:${{ github.ref_name }}-${{ github.sha }}
          build-args: |
            SERVICE=backend
            TAG=${{ github.ref_name }}

      - name: Build and push claimer
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: Dockerfile
          tags: |
            ghcr.io/reservoirprotocol/relay-claimer:latest
            ghcr.io/reservoirprotocol/relay-claimer:${{ github.sha }}
            ghcr.io/reservoirprotocol/relay-claimer:${{ github.ref_name }}-${{ github.sha }}
          build-args: |
            SERVICE=claimer
            TAG=${{ github.ref_name }}

      - name: Post to Slack
        if: ${{ always() }}
        id: slack-build
        uses: unevenlabs/slack-github-action@v1.0.2
        with:
          channel-id: 'ci'
          payload: |
            {
              "text": "GitHub build result: <status-${{ job.status }}-status>\nAuthor: <author-${{ github.actor }}-author>\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub build result: <status-${{ job.status }}-status>\nAuthor: <author-${{ github.actor }}-author>\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [build]
    environment: dev
    if: github.ref == 'refs/heads/development'
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run deployment
        run: |
          docker run --rm \
            -e DEVOPSBOT_TOKEN=${{ secrets.DEVOPSBOT_TOKEN }} \
            -e GITHUB_SHA=${{ github.sha }} \
            -e ENVIRONMENT=dev \
            ghcr.io/reservoirprotocol/relay-deploy:latest

      - name: Post to Slack
        if: ${{ always() }}
        id: slack-deploy-dev
        uses: unevenlabs/slack-github-action@v1.0.2
        with:
          channel-id: 'ci'
          update-ts: ${{ steps.slack-build.outputs.ts }}
          payload: |
            {
              "text": "GitHub deploy dev result: <status-${{ job.status }}-status>\nAuthor: <author-${{ github.actor }}-author>\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub deploy dev result: <status-${{ job.status }}-status>\nAuthor: <author-${{ github.actor }}-author>\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [build]
    environment: prod
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run deployment
        run: |
          docker run --rm \
            -e DEVOPSBOT_TOKEN=${{ secrets.DEVOPSBOT_TOKEN }} \
            -e GITHUB_SHA=${{ github.sha }} \
            -e ENVIRONMENT=prod \
            ghcr.io/reservoirprotocol/relay-deploy:latest

      - name: Post to Slack
        if: ${{ always() }}
        id: slack-deploy-prod
        uses: unevenlabs/slack-github-action@v1.0.2
        with:
          channel-id: 'ci'
          update-ts: ${{ steps.slack-build.outputs.ts }}
          payload: |
            {
              "text": "GitHub deploy prod result: <status-${{ job.status }}-status>\nAuthor: <author-${{ github.actor }}-author>\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub deploy prod result: <status-${{ job.status }}-status>\nAuthor: <author-${{ github.actor }}-author>\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

name: Build and Publish Deployment Image

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-and-push:
    name: Build and Push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/reservoirprotocol/relay-deploy:latest
            ghcr.io/reservoirprotocol/relay-deploy:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Post to Slack
        if: ${{ always() }}
        uses: unevenlabs/slack-github-action@v1.0.2
        with:
          channel-id: "ci"
          payload: |
            {
              "text": "Deployment image build result: <status-${{ job.status }}-status>\nAuthor: <author-${{ github.actor }}-author>\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Deployment image build result: <status-${{ job.status }}-status>\nAuthor: <author-${{ github.actor }}-author>\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
